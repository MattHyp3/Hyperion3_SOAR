{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_2_to_port_3",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_3_to_port_4",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_4_to_port_5",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_5_to_port_6",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_6_to_port_7",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "id": "port_7_to_port_8",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_10_to_port_1",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_12_to_port_1",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_10_to_port_13",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_8_to_port_10",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_14_to_port_12",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_13_to_port_15",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_15_to_port_14",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                }
            ],
            "hash": "0e76828a553b38b6cd414ff035173d81731bc5b7",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 110,
                    "y": -8.952838470577262e-13
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "warnings": {},
                    "x": 120,
                    "y": 1740
                },
                "10": {
                    "data": {
                        "advanced": {
                            "delimiter": ",",
                            "delimiter_enabled": true,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.cef.action",
                                        "value": "blocked"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.cef.suppressed_event",
                                        "value": "suppressed"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "Triage Closed",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "Triage Open",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "customDatapaths": {
                            "artifacts": {
                                "artifact:*.cef.action": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.action",
                                    "value": "artifact:*.cef.action"
                                },
                                "artifact:*.cef.detail": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.detail",
                                    "value": "artifact:*.cef.detail"
                                },
                                "artifact:*.cef.suppressed_event": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.suppressed_event",
                                    "value": "artifact:*.cef.suppressed_event"
                                }
                            }
                        },
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "10",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "decision",
                    "warnings": {},
                    "x": 170,
                    "y": 1184
                },
                "12": {
                    "data": {
                        "action": "set status",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Jira",
                        "connectorConfigs": [
                            "csoc jira connector"
                        ],
                        "connectorId": "1e1618e7-2f70-4fc0-916a-f96facc2d2e1",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "set_status_1",
                        "id": "12",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "comment": "",
                            "id": "anomali_match_ticket:action_result.data.*.id",
                            "resolution": "Done",
                            "status": "Done",
                            "update_fields": "{\"customfield_10002\":{\"id\":\"11500\"}}"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "status"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "action",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": -440,
                    "y": 1620
                },
                "13": {
                    "data": {
                        "advanced": {
                            "customName": "closure note",
                            "customNameId": 0,
                            "description": "setting note for auto closure as an automated triage event",
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "closure_note",
                        "id": "13",
                        "parameters": [
                            ""
                        ],
                        "template": "Ticket closed as auto triage as event was blocked and tagged as suppressed event.",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "format",
                    "warnings": {},
                    "x": -440,
                    "y": 1340
                },
                "14": {
                    "data": {
                        "action": "add comment",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Jira",
                        "connectorConfigs": [
                            "csoc jira connector"
                        ],
                        "connectorId": "1e1618e7-2f70-4fc0-916a-f96facc2d2e1",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "add_comment_1",
                        "id": "14",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "comment": "closure_note:formatted_data",
                            "id": "anomali_match_ticket:action_result.data.*.id",
                            "internal": false
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "comment"
                            },
                            {
                                "data_type": "boolean",
                                "default": true,
                                "field": "internal"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "action",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": -440,
                    "y": 1540
                },
                "15": {
                    "data": {
                        "advanced": {
                            "customName": "auto close note",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "auto_close_note",
                        "id": "15",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "closure_note:formatted_data",
                                "note_format": "markdown",
                                "note_type": "general",
                                "title": "Auto Close Note"
                            }
                        }
                    },
                    "errors": {},
                    "id": "15",
                    "type": "utility",
                    "warnings": {},
                    "x": -440,
                    "y": 1440
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "Format Summary",
                            "customNameId": 0,
                            "join": []
                        },
                        "customDatapaths": {
                            "artifacts": {
                                "artifact:*.cef.indicator": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.indicator",
                                    "value": "artifact:*.cef.indicator"
                                }
                            }
                        },
                        "functionId": 1,
                        "functionName": "format_summary",
                        "id": "2",
                        "parameters": [
                            "artifact:*.cef.indicator"
                        ],
                        "template": "Anomali Match Indicator Hit - {0}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "format",
                    "warnings": {},
                    "x": 90,
                    "y": 148
                },
                "3": {
                    "data": {
                        "advanced": {
                            "customName": "Format Description",
                            "customNameId": 0,
                            "join": []
                        },
                        "customDatapaths": {
                            "artifacts": {
                                "artifact:*.cef.action": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.action",
                                    "value": "artifact:*.cef.action"
                                },
                                "artifact:*.cef.age": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.age",
                                    "value": "artifact:*.cef.age"
                                },
                                "artifact:*.cef.confidence": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.confidence",
                                    "value": "artifact:*.cef.confidence"
                                },
                                "artifact:*.cef.dest": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.dest",
                                    "value": "artifact:*.cef.dest"
                                },
                                "artifact:*.cef.direction": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.direction",
                                    "value": "artifact:*.cef.direction"
                                },
                                "artifact:*.cef.indicator": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.indicator",
                                    "value": "artifact:*.cef.indicator"
                                },
                                "artifact:*.cef.indicator_whois": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.indicator_whois",
                                    "value": "artifact:*.cef.indicator_whois"
                                },
                                "artifact:*.cef.itype": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.itype",
                                    "value": "artifact:*.cef.itype"
                                },
                                "artifact:*.cef.severity": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.severity",
                                    "value": "artifact:*.cef.severity"
                                },
                                "artifact:*.cef.source_feed": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.source_feed",
                                    "value": "artifact:*.cef.source_feed"
                                }
                            }
                        },
                        "functionId": 2,
                        "functionName": "format_description",
                        "id": "3",
                        "parameters": [
                            "container:id",
                            "container:create_time",
                            "artifact:*.cef.es_pivot",
                            "artifact:*.cef.rule_name",
                            "artifact:*.cef.security_domain",
                            "artifact:*.cef.alert_source",
                            "artifact:*.cef.event_id",
                            "artifact:*.cef.severity",
                            "artifact:*.cef.srcip",
                            "artifact:*.cef.user",
                            "artifact:*.cef.watchlist_name",
                            "artifact:*.cef.process_path",
                            "artifact:*.cef.action",
                            "artifact:*.cef.severity",
                            "artifact:*.cef.rule_description",
                            "artifact:*.cef.dest",
                            "artifact:*.cef.src_host",
                            "artifact:*.cef.notification_type",
                            "artifact:*.cef.savedsearch_description",
                            "artifact:*.cef.direction",
                            "artifact:*.cef.itype",
                            "artifact:*.cef.source_feed",
                            "artifact:*.cef.confidence",
                            "artifact:*.cef.age",
                            "artifact:*.cef.indicator",
                            "artifact:*.cef.indicator_whois"
                        ],
                        "template": "h4. ANOMALI MATCH ALERT DETAILS\n\n*Notable name*: {3}\n*Alert description*: {14}\n*Alert time*: {1}\n\n{18}\n\n*Notable Type*: Anomali Threat Match\n*Security Domain*:{4}\n*Alert Source*: {5}\n*SOAR Event ID*: {0}\n*ES Notable Event ID*: {6}\n \n----\nh4. EVENT DETAILS\n \n*Computer name*: {16}\n*IP address*: {8}\n*User*: {9}\n*Severity*: {7}\n*Event host*: {16}\n*Event destination*: {15}\n*Event action*: {12}\n*Event direction*: {19}\n\n----\nh4. INDICATOR DETAILS\n\n*Indicator*: {24}\n*Indicator type*: {20}\n*Indicator confidence*: {22}\n*Indicator severity*: {13}\n*Indicator age*: {23}\n*Indicator feed*: {21}\n*Indicator whois*: {25}\n\n----\nh4. LINKS\n\n*SOAR Pivot URL*\nhttps://splunk.com/mission/{0}\n\n*ES Pivot URL*\n{2}\n\n*Anomali Match*\nhttps://splunk.com:8080/\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "format",
                    "warnings": {},
                    "x": 90,
                    "y": 296
                },
                "4": {
                    "data": {
                        "action": "create ticket",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "anomali_match_ticket",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Jira",
                        "connectorConfigs": [
                            "csoc jira connector"
                        ],
                        "connectorId": "1e1618e7-2f70-4fc0-916a-f96facc2d2e1",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "anomali_match_ticket",
                        "id": "4",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "assignee": "Unassigned",
                            "description": "format_description:formatted_data",
                            "fields": "{\"customfield_10002\":{\"id\":\"11500\"}}",
                            "issue_type": "Alert",
                            "priority": "Medium",
                            "project_key": "ALERT",
                            "summary": "format_summary:formatted_data"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "summary"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "issue_type"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "project_key"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "action",
                    "warnings": {},
                    "x": 90,
                    "y": 444
                },
                "5": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "artifact_create",
                            "repoName": "community"
                        },
                        "functionId": 1,
                        "functionName": "artifact_create_1",
                        "id": "5",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "artifact_create": {
                                "description": "Create a new artifact with the specified attributes. Supports all fields available in /rest/artifact. Add any unlisted inputs as dictionary keys in input_json. Unsupported keys will automatically be dropped.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "Container which the artifact will be added to.",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the new artifact, which is optional and defaults to \"artifact\".",
                                        "inputType": "item",
                                        "label": "name",
                                        "name": "name",
                                        "placeholder": "artifact",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The label of the new artifact, which is optional and defaults to \"events\"",
                                        "inputType": "item",
                                        "label": "label",
                                        "name": "label",
                                        "placeholder": "events",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            ""
                                        ],
                                        "description": "The severity of the new artifact, which is optional and defaults to \"Medium\". Typically this is either \"High\", \"Medium\", or \"Low\".",
                                        "inputType": "item",
                                        "label": "severity",
                                        "name": "severity",
                                        "placeholder": "Medium",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the CEF field to populate in the artifact, such as \"destinationAddress\" or \"sourceDnsDomain\". Required only if cef_value is provided.",
                                        "inputType": "item",
                                        "label": "cef_field",
                                        "name": "cef_field",
                                        "placeholder": "destinationAddress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The value of the CEF field to populate in the artifact, such as the IP address, domain name, or file hash. Required only if cef_field is provided.",
                                        "inputType": "item",
                                        "label": "cef_value",
                                        "name": "cef_value",
                                        "placeholder": "192.0.2.192",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The CEF data type of the data in cef_value. For example, this could be \"ip\", \"hash\", or \"domain\". Optional.",
                                        "inputType": "item",
                                        "label": "cef_data_type",
                                        "name": "cef_data_type",
                                        "placeholder": "ip",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "A comma-separated list of tags to apply to the created artifact, which is optional.",
                                        "inputType": "item",
                                        "label": "tags",
                                        "name": "tags",
                                        "placeholder": "tag1, tag2, tag3",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Either \"true\" or \"false\", depending on whether or not the new artifact should trigger the execution of any playbooks that are set to active on the label of the container the artifact will be added to. Optional and defaults to \"false\".",
                                        "inputType": "item",
                                        "label": "run_automation",
                                        "name": "run_automation",
                                        "placeholder": "false",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Optional parameter to modify any extra attributes of the artifact. Input_json will be merged with other inputs. In the event of a conflict, input_json will take precedence.",
                                        "inputType": "item",
                                        "label": "input_json",
                                        "name": "input_json",
                                        "placeholder": "{\"source_data_identifier\": \"1234\", \"data\": \"5678\"}",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "artifact_create",
                                "name": "artifact_create"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "artifact_create": {
                                "cef_data_type": null,
                                "cef_field": "jira_ticket_id",
                                "cef_value": "anomali_match_ticket:action_result.data.*.id",
                                "container": "container:id",
                                "input_json": null,
                                "label": "Jira",
                                "name": "jira_ticket",
                                "run_automation": null,
                                "severity": null,
                                "tags": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "5",
                    "type": "utility",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 90,
                    "y": 592
                },
                "6": {
                    "data": {
                        "advanced": {
                            "customName": "Jira Ticket Note",
                            "customNameId": 0,
                            "description": "",
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "jira_ticket_note",
                        "id": "6",
                        "parameters": [
                            "anomali_match_ticket:action_result.data.*.id",
                            "anomali_match_ticket:action_result.data.*.name"
                        ],
                        "template": "Note for Jira ticket\n\nJira Ticket ID\n{0}\n\nJira Ticket Link\n\nhttps://splunk.com:8480/browse/{1}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "format",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 90,
                    "y": 740
                },
                "7": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "add_note_2",
                        "id": "7",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "jira_ticket_note:formatted_data",
                                "note_format": "markdown",
                                "note_type": "general",
                                "title": "Jira Ticket"
                            }
                        }
                    },
                    "errors": {},
                    "id": "7",
                    "type": "utility",
                    "warnings": {},
                    "x": 100,
                    "y": 880
                },
                "8": {
                    "data": {
                        "action": "update event",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "update_event_1",
                        "id": "8",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "comment": "jira_ticket_note:formatted_data",
                            "event_ids": "artifact:*.cef.event_id",
                            "status": "closed",
                            "wait_for_confirmation": true
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "event_ids"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "action",
                    "warnings": {},
                    "x": 90,
                    "y": 1036
                }
            },
            "notes": "",
            "origin": {
                "playbook_id": 161,
                "playbook_name": "AnomaliMatch_Jira",
                "playbook_repo_id": 2,
                "playbook_repo_name": "local"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.11",
        "version": "6.2.0.355"
    },
    "create_time": "2024-06-05T23:09:32.734186+00:00",
    "draft_mode": true,
    "labels": [
        "events"
    ],
    "tags": [
        "Carbon Black"
    ]
}