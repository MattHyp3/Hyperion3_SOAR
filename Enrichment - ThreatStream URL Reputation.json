{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_7_to_port_14",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_0_to_port_26",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "id": "port_26_to_port_25",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "25",
                    "targetPort": "25_in"
                },
                {
                    "id": "port_24_to_port_28",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "28",
                    "targetPort": "28_in"
                },
                {
                    "id": "port_14_to_port_34",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "34",
                    "targetPort": "34_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_34_to_port_24",
                    "sourceNode": "34",
                    "sourcePort": "34_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_34_to_port_35",
                    "sourceNode": "34",
                    "sourcePort": "34_out",
                    "targetNode": "35",
                    "targetPort": "35_in"
                },
                {
                    "id": "port_35_to_port_36",
                    "sourceNode": "35",
                    "sourcePort": "35_out",
                    "targetNode": "36",
                    "targetPort": "36_in"
                },
                {
                    "id": "port_25_to_port_38",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "38",
                    "targetPort": "38_in"
                },
                {
                    "id": "port_38_to_port_7",
                    "sourceNode": "38",
                    "sourcePort": "38_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "id": "port_0_to_port_39",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "39",
                    "targetPort": "39_in"
                },
                {
                    "id": "port_39_to_port_41",
                    "sourceNode": "39",
                    "sourcePort": "39_out",
                    "targetNode": "41",
                    "targetPort": "41_in"
                },
                {
                    "id": "port_41_to_port_42",
                    "sourceNode": "41",
                    "sourcePort": "41_out",
                    "targetNode": "42",
                    "targetPort": "42_in"
                },
                {
                    "id": "port_28_to_port_1",
                    "sourceNode": "28",
                    "sourcePort": "28_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_36_to_port_1",
                    "sourceNode": "36",
                    "sourcePort": "36_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_42_to_port_1",
                    "sourceNode": "42",
                    "sourcePort": "42_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "d1dcf8f91dcb0e5f5b7dfeca5669a6abce46ecca",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 360,
                    "y": -1.2789769243681803e-13
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "warnings": {},
                    "x": 360,
                    "y": 1512
                },
                "14": {
                    "data": {
                        "advanced": {
                            "customName": "Threatstream Rep",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "artifact_create",
                            "repoName": "community"
                        },
                        "functionId": 6,
                        "functionName": "threatstream_rep",
                        "id": "14",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "artifact_create": {
                                "description": "Create a new artifact with the specified attributes.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "Container which the artifact will be added to.",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the new artifact, which is optional and defaults to \"artifact\".",
                                        "inputType": "item",
                                        "label": "name",
                                        "name": "name",
                                        "placeholder": "artifact",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The label of the new artifact, which is optional and defaults to \"events\"",
                                        "inputType": "item",
                                        "label": "label",
                                        "name": "label",
                                        "placeholder": "events",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            ""
                                        ],
                                        "description": "The severity of the new artifact, which is optional and defaults to \"Medium\". Typically this is either \"High\", \"Medium\", or \"Low\".",
                                        "inputType": "item",
                                        "label": "severity",
                                        "name": "severity",
                                        "placeholder": "Medium",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the CEF field to populate in the artifact, such as \"destinationAddress\" or \"sourceDnsDomain\". Required only if cef_value is provided.",
                                        "inputType": "item",
                                        "label": "cef_field",
                                        "name": "cef_field",
                                        "placeholder": "destinationAddress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The value of the CEF field to populate in the artifact, such as the IP address, domain name, or file hash. Required only if cef_field is provided.",
                                        "inputType": "item",
                                        "label": "cef_value",
                                        "name": "cef_value",
                                        "placeholder": "192.0.2.192",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The CEF data type of the data in cef_value. For example, this could be \"ip\", \"hash\", or \"domain\". Optional.",
                                        "inputType": "item",
                                        "label": "cef_data_type",
                                        "name": "cef_data_type",
                                        "placeholder": "ip",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "A comma-separated list of tags to apply to the created artifact, which is optional.",
                                        "inputType": "item",
                                        "label": "tags",
                                        "name": "tags",
                                        "placeholder": "tag1, tag2, tag3",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Either \"true\" or \"false\", depending on whether or not the new artifact should trigger the execution of any playbooks that are set to active on the label of the container the artifact will be added to. Optional and defaults to \"false\".",
                                        "inputType": "item",
                                        "label": "run_automation",
                                        "name": "run_automation",
                                        "placeholder": "false",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Optional parameter to modify any extra attributes of the artifact. Input_json will be merged with other inputs. In the event of a conflict, input_json will take precedence.",
                                        "inputType": "item",
                                        "label": "input_json",
                                        "name": "input_json",
                                        "placeholder": "{\"source_data_identifier\": \"1234\", \"data\": \"5678\"}",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "artifact_create",
                                "name": "artifact_create"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "artifact_create": {
                                "cef_data_type": null,
                                "cef_field": "threatstream_result",
                                "cef_value": "threatsteam_url_rep:action_result.data",
                                "container": "container:id",
                                "input_json": null,
                                "label": "reputation",
                                "name": "ThreatStream Results",
                                "run_automation": null,
                                "severity": null,
                                "tags": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "14",
                    "type": "utility",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 170,
                    "y": 740
                },
                "24": {
                    "data": {
                        "advanced": {
                            "customName": "Threatstream Results",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "threatstream_results",
                        "id": "24",
                        "parameters": [
                            "threatsteam_url_rep:action_result.data.*.confidence",
                            "threatsteam_url_rep:action_result.message",
                            "threatsteam_url_rep:action_result.data.*.threatscore",
                            "threatsteam_url_rep:action_result.data.*.itype",
                            "threatsteam_url_rep:action_result.data.*.source"
                        ],
                        "template": "*Threat Stream Results*\n\n{1}\n\nConfidence: {0}\nThreat Score: {2}\nIndicator: {3}\nSource: {4}\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "24",
                    "type": "format",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 0,
                    "y": 1068
                },
                "25": {
                    "data": {
                        "advanced": {
                            "customName": "Refang URL",
                            "customNameId": 0,
                            "description": "Grabs the url field from the event which is defanged and modifies to for better searching against threat sources.",
                            "join": []
                        },
                        "customDatapaths": {
                            "artifacts": {
                                "artifact:*.cef.urls": {
                                    "contains": [],
                                    "isCustomDatapath": true,
                                    "label": "artifact:*.cef.urls",
                                    "value": "artifact:*.cef.urls"
                                }
                            }
                        },
                        "functionId": 2,
                        "functionName": "refang_url",
                        "id": "25",
                        "inputParameters": [
                            "get_url:formatted_data.*"
                        ],
                        "outputVariables": [
                            "refanged_url"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "25",
                    "type": "code",
                    "userCode": "    def refang(defanged_urls):\n        refanged_urls = []\n        \n   # interate over the list of urls\n        for url in defanged_urls:\n            if url == None or len(url) == 0:\n                # skip empty urls\n                continue\n                \n            phantom.debug(\"Before refang: {}\".format(url))\n            \n            url = url.replace(\"hxxp\", \"http\")\n            url = url.replace(\"[.]\", \".\")\n            url = url.replace(\"[at]\", \"@\")\n            url = url.replace(\"\\\\\", \"\")\n\n            phantom.debug(\"After refang: {}\".format(url))\n            \n            refanged_urls.append(url)\n            \n        return refanged_urls\n            \n\n    phantom.debug(get_url__as_list)\n    refang_url__refanged_url = refang(get_url__as_list)\n",
                    "warnings": {},
                    "x": 170,
                    "y": 296
                },
                "26": {
                    "data": {
                        "advanced": {
                            "customName": "Get URL",
                            "customNameId": 0,
                            "description": "gets the URL from the event artifact\n\nSpecifically pulls the 'urls' field which is passed through from Splunk ES.",
                            "drop_none": true,
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "get_url",
                        "id": "26",
                        "parameters": [
                            "artifact:*.cef.artifact_url"
                        ],
                        "template": "%%\n{0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "format",
                    "warnings": {},
                    "x": 170,
                    "y": 148
                },
                "28": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 10,
                        "functionName": "add_note_10",
                        "id": "28",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "input",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "threatstream_results:formatted_data",
                                "note_format": "markdown",
                                "note_type": "general",
                                "title": "threatstream results"
                            }
                        }
                    },
                    "errors": {},
                    "id": "28",
                    "type": "utility",
                    "warnings": {},
                    "x": 0,
                    "y": 1216
                },
                "34": {
                    "data": {
                        "advanced": {
                            "delimiter": ",",
                            "delimiter_enabled": true,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "threatsteam_url_rep:action_result.data.*.confidence",
                                        "value": "None"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "No Result",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "Results",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "decision_2",
                        "id": "34",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "34",
                    "type": "decision",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 250,
                    "y": 888
                },
                "35": {
                    "data": {
                        "advanced": {
                            "customName": "No results seen",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 6,
                        "functionName": "no_results_seen",
                        "id": "35",
                        "parameters": [
                            ""
                        ],
                        "template": "*Threat Stream Results*\n\nNo results seen in Threat Stream\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "35",
                    "type": "format",
                    "warnings": {},
                    "x": 340,
                    "y": 1068
                },
                "36": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 5,
                        "functionName": "add_note_5",
                        "id": "36",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "input",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "no_results_seen:formatted_data",
                                "note_format": "markdown",
                                "note_type": "general",
                                "title": "Threat Stream Results"
                            }
                        }
                    },
                    "errors": {},
                    "id": "36",
                    "type": "utility",
                    "warnings": {},
                    "x": 340,
                    "y": 1216
                },
                "38": {
                    "data": {
                        "advanced": {
                            "customName": "get refang url as list",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "get_refang_url_as_list",
                        "id": "38",
                        "parameters": [
                            "refang_url:custom_function:refanged_url"
                        ],
                        "template": "%%\n{0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "38",
                    "type": "format",
                    "warnings": {},
                    "x": 170,
                    "y": 443.99999999999994
                },
                "39": {
                    "data": {
                        "advanced": {
                            "customName": "Get Domain",
                            "customNameId": 0,
                            "drop_none": true,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "get_domain",
                        "id": "39",
                        "parameters": [
                            "artifact:*.cef.artifact_domain"
                        ],
                        "template": "{0}\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "39",
                    "type": "format",
                    "warnings": {},
                    "x": 680,
                    "y": 904
                },
                "41": {
                    "data": {
                        "action": "domain reputation",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "ThreatStream Domain Rep",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "threatstream_domain_rep",
                        "id": "41",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "domain": "get_domain:formatted_data",
                            "limit": "10"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "numeric",
                                "default": 1000,
                                "field": "limit"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "domain"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "41",
                    "type": "action",
                    "warnings": {},
                    "x": 680,
                    "y": 1068
                },
                "42": {
                    "data": {
                        "advanced": {
                            "customName": "Domain Rep Result",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "artifact_create",
                            "repoName": "community"
                        },
                        "functionId": 1,
                        "functionName": "domain_rep_result",
                        "id": "42",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "artifact_create": {
                                "description": "Create a new artifact with the specified attributes. Supports all fields available in /rest/artifact. Add any unlisted inputs as dictionary keys in input_json. Unsupported keys will automatically be dropped.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "Container which the artifact will be added to.",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the new artifact, which is optional and defaults to \"artifact\".",
                                        "inputType": "item",
                                        "label": "name",
                                        "name": "name",
                                        "placeholder": "artifact",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The label of the new artifact, which is optional and defaults to \"events\"",
                                        "inputType": "item",
                                        "label": "label",
                                        "name": "label",
                                        "placeholder": "events",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            ""
                                        ],
                                        "description": "The severity of the new artifact, which is optional and defaults to \"Medium\". Typically this is either \"High\", \"Medium\", or \"Low\".",
                                        "inputType": "item",
                                        "label": "severity",
                                        "name": "severity",
                                        "placeholder": "Medium",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the CEF field to populate in the artifact, such as \"destinationAddress\" or \"sourceDnsDomain\". Required only if cef_value is provided.",
                                        "inputType": "item",
                                        "label": "cef_field",
                                        "name": "cef_field",
                                        "placeholder": "destinationAddress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The value of the CEF field to populate in the artifact, such as the IP address, domain name, or file hash. Required only if cef_field is provided.",
                                        "inputType": "item",
                                        "label": "cef_value",
                                        "name": "cef_value",
                                        "placeholder": "192.0.2.192",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The CEF data type of the data in cef_value. For example, this could be \"ip\", \"hash\", or \"domain\". Optional.",
                                        "inputType": "item",
                                        "label": "cef_data_type",
                                        "name": "cef_data_type",
                                        "placeholder": "ip",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "A comma-separated list of tags to apply to the created artifact, which is optional.",
                                        "inputType": "item",
                                        "label": "tags",
                                        "name": "tags",
                                        "placeholder": "tag1, tag2, tag3",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Either \"true\" or \"false\", depending on whether or not the new artifact should trigger the execution of any playbooks that are set to active on the label of the container the artifact will be added to. Optional and defaults to \"false\".",
                                        "inputType": "item",
                                        "label": "run_automation",
                                        "name": "run_automation",
                                        "placeholder": "false",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Optional parameter to modify any extra attributes of the artifact. Input_json will be merged with other inputs. In the event of a conflict, input_json will take precedence.",
                                        "inputType": "item",
                                        "label": "input_json",
                                        "name": "input_json",
                                        "placeholder": "{\"source_data_identifier\": \"1234\", \"data\": \"5678\"}",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "artifact_create",
                                "name": "artifact_create"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "artifact_create": {
                                "cef_data_type": null,
                                "cef_field": "threatsteam_domain_rep",
                                "cef_value": "threatstream_domain_rep:action_result.summary",
                                "container": "container:id",
                                "input_json": null,
                                "label": "reputation",
                                "name": "ThreatStream Domain Result",
                                "run_automation": null,
                                "severity": null,
                                "tags": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "42",
                    "type": "utility",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 680,
                    "y": 1216
                },
                "7": {
                    "data": {
                        "action": "url reputation",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Threatsteam URL Rep",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "ThreatStream",
                        "connectorConfigs": [
                            "threatstream"
                        ],
                        "connectorId": "5b4fca40-e1b8-499d-aa57-a2c8e0b1c5e7",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "threatsteam_url_rep",
                        "id": "7",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "extend_source": false,
                            "limit": "10",
                            "url": "get_refang_url_as_list:formatted_data.*"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "url"
                            },
                            {
                                "data_type": "numeric",
                                "default": 1000,
                                "field": "limit"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "action",
                    "warnings": {},
                    "x": 170,
                    "y": 592
                }
            },
            "notes": "",
            "origin": {
                "playbook_id": 172,
                "playbook_name": "Enrichment - ThreatStream",
                "playbook_repo_id": 2,
                "playbook_repo_name": "local"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.11",
        "version": "6.2.0.355"
    },
    "create_time": "2024-05-06T05:38:08.393625+00:00",
    "draft_mode": false,
    "labels": [
        "events"
    ],
    "tags": []
}